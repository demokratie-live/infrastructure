name: Infrastructure CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "infrastructure/**"
      - "kustomize/**"
  pull_request:
    branches: [main]
    paths:
      - "infrastructure/**"
      - "kustomize/**"
  # Manual trigger for emergency deployments
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for manual deployment"
        required: true
        default: "Manual deployment"

env:
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

jobs:
  # Security and Compliance First
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better secret scanning

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      # Dependency Security Scan
      - name: Dependency Vulnerability Scan
        working-directory: infrastructure
        run: |
          pnpm audit --audit-level=high
          # npm audit fix --dry-run to see what would be fixed

      # Secret Scanning
      - name: Secret Scanning
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

      # Infrastructure Security Scanning
      - name: Infrastructure Security Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infrastructure/
          framework: terraform,kubernetes,dockerfile
          output_format: sarif
          output_file_path: reports/checkov.sarif

      # Kubernetes Security Scanning
      - name: Kubernetes Security Scan
        run: |
          # Install kubesec
          curl -sSX GET "https://api.github.com/repos/controlplaneio/kubesec/releases/latest" \
            | jq -r '.assets[] | select(.name | contains("linux")) | .browser_download_url' \
            | xargs wget -O kubesec
          chmod +x kubesec

          # Scan Kubernetes manifests
          find kustomize/ -name "*.yaml" -exec ./kubesec scan {} \;

      # Upload security results
      - name: Upload Checkov results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: reports/checkov.sarif

  # Enhanced Validation with Performance Tests
  validate-enhanced:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      # Code Quality
      - name: Code Quality Checks
        working-directory: infrastructure
        run: |
          # These checks are also run by Husky pre-commit hooks for shift-left approach
          # This ensures consistency between local development and CI environment
          pnpm lint
          pnpm format:check

      # Dead code elimination (non-blocking)
      - name: Dead Code Analysis
        working-directory: infrastructure
        run: |
          echo "🔍 Running dead code analysis..."
          # This check is also performed by Husky hooks on staged files
          pnpm knip:ci

      # Infrastructure Validation
      - name: Infrastructure Validation
        working-directory: infrastructure
        run: |
          pnpm validate:mock
          pnpm test:all

      # Performance Baseline Tests
      - name: Performance Baseline Tests
        working-directory: infrastructure
        run: |
          # Test resource creation time
          time pnpm validate:mock
          # Check for performance regressions
          echo "TODO: Implement performance regression tests"

  # Enhanced Preview with separate Foundation and Platform jobs
  preview-foundation:
    needs: [security-scan, validate-enhanced]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install Pulumi CLI
        uses: pulumi/actions@v6

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      # Foundation cost analysis
      - name: Foundation Cost Analysis
        working-directory: infrastructure
        run: |
          cd democracy-foundation && pulumi stack select production
          cd ../
          echo "## 💰 Cost Analysis - Foundation" >> $GITHUB_STEP_SUMMARY
          pnpm foundation:preview | grep -E "(create|update|delete|replace)" >> $GITHUB_STEP_SUMMARY || true

      # Preview foundation changes
      - name: Preview Foundation Changes
        working-directory: infrastructure
        run: |
          cd democracy-foundation && pulumi stack select production
          cd ../
          pnpm foundation:preview --diff

  preview-platform:
    needs: preview-foundation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Pulumi CLI
        uses: pulumi/actions@v4

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      # Platform cost analysis
      - name: Platform Cost Analysis
        working-directory: infrastructure
        run: |
          cd democracy-platform && pulumi stack select prod
          cd ../
          echo "## 💰 Cost Analysis - Platform" >> $GITHUB_STEP_SUMMARY
          pnpm platform:preview | grep -E "(create|update|delete|replace)" >> $GITHUB_STEP_SUMMARY || true

      # Preview platform changes
      - name: Preview Platform Changes
        working-directory: infrastructure
        run: |
          cd democracy-platform && pulumi stack select prod
          cd ../
          pnpm platform:preview --diff

  # Deploy Foundation
  deploy-foundation:
    needs: [security-scan, validate-enhanced]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Pulumi CLI
        uses: pulumi/actions@v4

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      # Pre-deployment Health Check
      - name: Pre-deployment Health Check
        working-directory: infrastructure
        run: |
          pnpm health:check || echo "Pre-deployment health check failed - proceeding with caution"

      # Deploy Foundation
      - name: Deploy Foundation
        working-directory: infrastructure
        run: |
          cd democracy-foundation && pulumi stack select production
          cd ../
          pnpm foundation:up --yes

  # Deploy Platform
  deploy-platform:
    needs: deploy-foundation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Pulumi CLI
        uses: pulumi/actions@v4

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      # Deploy Platform
      - name: Deploy Platform
        working-directory: infrastructure
        run: |
          cd democracy-platform && pulumi stack select prod
          cd ../
          pnpm platform:up --yes

      # Post-deployment Tests (from Legacy)
      - name: Run post-deployment tests
        working-directory: infrastructure
        run: pnpm test:all

  # Enhanced post-deployment monitoring
  post-deployment-monitoring:
    needs: deploy-platform
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      # Enhanced Post-deployment Tests
      - name: Post-deployment Validation
        working-directory: infrastructure
        run: |
          # Wait for services to be ready
          sleep 30

          # Run comprehensive health checks
          pnpm health:full

          # Run live validation
          pnpm validate:live

          # Run deployment-specific validation
          pnpm validate:deployment

      # Generate and Save Infrastructure Status
      - name: Generate Infrastructure Status Report
        working-directory: infrastructure
        run: |
          pnpm status:save

      # Upload Deployment Artifacts
      - name: Upload Deployment Report
        uses: actions/upload-artifact@v3
        with:
          name: infrastructure-status-report
          path: infrastructure/reports/

  # Rollback Job (Manual trigger or on failure)
  rollback:
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    needs: [deploy-platform]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Pulumi CLI
        uses: pulumi/actions@v4

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      - name: Rollback to Previous State
        working-directory: infrastructure
        run: |
          echo "🚨 Deployment failed - initiating rollback"

          # Get previous successful deployment
          cd democracy-platform && pulumi stack select prod
          pulumi history | head -10

          # TODO: Implement actual rollback logic
          echo "Manual rollback required - check Pulumi history"

  # Scheduled Health Monitoring
  scheduled-monitoring:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        working-directory: infrastructure
        run: pnpm install

      - name: Comprehensive Health Check
        working-directory: infrastructure
        run: |
          pnpm health:full
          pnpm status:save

      - name: Upload Health Report
        uses: actions/upload-artifact@v3
        with:
          name: scheduled-health-report
          path: infrastructure/reports/
